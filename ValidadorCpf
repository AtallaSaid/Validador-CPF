#include<stdio.h>
#include<stdbool.h>
#include<string.h>
void imprimeEstado1(int cpf[])
{   if(cpf[8] == 0) printf("Rio Grande do Sul");
    else if(cpf[8] == 1) printf("Distrito Federal, Goiás, Mato Grosso, Mato Grosso do Sul e Tocantins");
    else if(cpf[8] == 2) printf("Amazonas, Pará, Roraima, Amapá, Acre e Rondônia");
    else if(cpf[8] == 3) printf("Ceará, Maranhão e Piauí");
    else if(cpf[8] == 4) printf("Paraíba, Pernambuco, Alagoas e Rio Grande do Norte");
    else if(cpf[8] == 5) printf("Bahia e Sergipe");
    else if(cpf[8] == 6) printf("Minas Gerais");
    else if(cpf[8] == 7) printf("Rio de Janeiro e Espírito Santo");
    else if(cpf[8] == 8) printf("São Paulo");
    else printf("Paraná e Santa Catarina");
}

void imprimeEstado2(int cpf[])
{   switch(cpf[8])
    {   case 0: printf("Rio Grande do Sul"); break;
        case 1: printf("Distrito Federal, Goiás, Mato Grosso, Mato Grosso do Sul e Tocantins"); break;
        case 2: printf("Amazonas, Pará, Roraima, Amapá, Acre e Rondônia"); break;
        case 3: printf("Ceará, Maranhão e Piauí"); break;
        case 4: printf("Paraíba, Pernambuco, Alagoas e Rio Grande do Norte"); break;
        case 5: printf("Bahia e Sergipe"); break;
        case 6: printf("Minas Gerais"); break;
        case 7: printf("Rio de Janeiro e Espírito Santo"); break;
        case 8: printf("São Paulo"); break;
        case 9: printf("Paraná e Santa Catarina");
    }
}

void imprimeEstado3(int cpf[])
{   char estados[][80]={{"Rio Grande do Sul"},
        {"Distrito Federal, Goiás, Mato Grosso, Mato Grosso do Sul e Tocantins"},
        {"Amazonas, Pará, Roraima, Amapá, Acre e Rondônia"}, 
        {"Ceará, Maranhão e Piauí"},
        {"Paraíba, Pernambuco, Alagoas e Rio Grande do Norte"},
        {"Bahia e Sergipe"},
        {"Minas Gerais"},
        {"Rio de Janeiro e Espírito Santo"},
        {"São Paulo"},
        {"Paraná e Santa Catarina"}};
    printf("%s", estados[ cpf[8] ]);
}

bool repetidos(int cpf[])
{   int i;
    for(i=0; i<10; i++)
    {   if(cpf[i] != cpf[i+1])
        {   return false;
        }
    }
    return true;
}

bool verificaDigito(int cpf[], int mult[], int N)
{   int i, soma=0;
	for(i=0; i<N; i++)
	{	soma = soma + cpf[i]*mult[i];
	}
	int resto = ((soma*10) % 11)%10;
	return (resto == cpf[N]);
}

void converterEntrada(char entrada[], int cpf[])
{   int i, j, tamEntrada;
	for(j=0;j<11;j++)
	    cpf[j] = 0;
	
	tamEntrada = strlen(entrada);
	j=10;
	for(i=tamEntrada-1;i>=0;i--)
	{	if(entrada[i]>='0' && entrada[i]<='9') // é um dígito
	    {   cpf[j] = entrada[i] - '0';  // transformo o caractere em número
	        j--;
	        if(j<0) return; // já completamos 11 dígitos
	    }
	}
}

int main()
{
	int cpf[11];
	char entrada[50];
	int m1[9]={10,9,8,7,6,5,4,3,2};
	int m2[10]={11,10,9,8,7,6,5,4,3,2};
	
	printf("Entre com os 11 digitos do CPF:");
	fgets(entrada, 50, stdin);
	
	converterEntrada(entrada, cpf);
	
	if( !repetidos(cpf) &&
        verificaDigito(cpf, m1, 9) &&
        verificaDigito(cpf, m2, 10) ){
		printf("\nCPF valido.\n");
		imprimeEstado3(cpf);
	}
	else{
		printf("\nErro no CPF.");
	}
	return 0;
}